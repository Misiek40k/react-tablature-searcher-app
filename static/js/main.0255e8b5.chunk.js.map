{"version":3,"sources":["components/features/ListItem/ListItem.module.scss","components/features/Search/Search.module.scss","components/layout/Header/Header.module.scss","components/common/Pagination/Pagination.module.scss","components/common/Title/Title.module.scss","components/common/Button/Button.module.scss","components/common/Checkbox/Checkbox.module.scss","components/layout/ContentContainer/ContentContainer.module.scss","components/common/TabType/TabType.module.scss","data/dataStore.js","components/common/Icon/Icon.js","components/layout/Header/Header.js","utils/convertTabType.js","components/common/Title/Title.js","components/common/Button/Button.js","components/common/Checkbox/Checkbox.js","components/features/Search/Search.js","components/common/TabType/TabType.js","components/features/ListItem/ListItem.js","components/common/Pagination/Pagination.js","components/features/List/List.js","components/layout/ContentContainer/ContentContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","settings","sm","md","lg","mdOffset","lgOffset","name","pageTitle","title","subtitle","fetchReq","search","buttons","txt","ico","cancel","variant","placeholder","checkboxes","href","pageItems","Icon","props","className","Header","styles","component","xs","logo","convertTabType","tabType","Title","Button","otherProps","split","map","join","Checkboxes","label","checked","setChecked","type","onChange","Search","makeVisible","visibleButtons","setValue","value","fetchData","data","event","target","length","item","Checkbox","key","buttonsShown","onClick","TabType","ListItem","id","artist","tabTypes","link","author","Pagination","pagesCount","activePage","setActivePage","pagination","i","push","list","active","List","filteredList","useState","Math","ceil","center","slice","ContentContainer","apiData","setApiData","player","guitar","chords","bass","filter","every","middle","fetch","then","res","json","result","error","console","log","App","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0255e8b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"ListItem_component__21RtX\",\"link\":\"ListItem_link__3zNku\",\"title\":\"ListItem_title__3T8wG\",\"author\":\"ListItem_author__2uGIm\",\"tabTypes\":\"ListItem_tabTypes__1pObI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"Search_component__2vykU\",\"checkboxes\":\"Search_checkboxes__1x-UV\",\"buttons\":\"Search_buttons__10AGK\",\"buttonsShown\":\"Search_buttonsShown__3-aiC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"Header_component__RSHwJ\",\"logo\":\"Header_logo__E8pCI\",\"name\":\"Header_name__1HVhl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Pagination_list__28H_q\",\"active\":\"Pagination_active__1BiKF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__O4tU3\",\"subtitle\":\"Title_subtitle__1i9cZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"Button_component__bNw4C\",\"danger\":\"Button_danger__23D2e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"Checkbox_component__2f1T7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"ContentContainer_component__21GA5\",\"centered\":\"ContentContainer_centered__1vtt0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"TabType_component__2u6Fl\"};","export const settings = {\n  col: {\n    sm: 12,\n    md: 8,\n    lg: 6,\n    mdOffset: 2,\n    lgOffset: 3,\n  },\n  logoIcon: 'guitar',\n  header: {\n    name: 'Tablature searcher',\n  },\n  contentContainer: {\n    pageTitle: {\n      title: 'Search',\n      subtitle: 'and play your best songs',\n    },\n    fetchReq: 'https://www.songsterr.com/a/ra/songs.json?pattern=',\n    search: {\n      buttons: {\n        search: {\n          txt: ' Search',\n          ico: 'search',\n        },\n        cancel: {\n          txt: ' Cancel',\n          ico: 'ban',\n          variant: 'danger',\n        },\n      },\n      placeholder: 'Search for tablature...',\n      checkboxes: ['player','guitar','chords','bass'],\n    },\n  },\n  list: {\n    title: 'Found records: ',\n    href: 'https://www.songsterr.com/a/wa/song?id=',\n    pageItems: 25,\n  },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Icon = props => (<i className={`fas fa-${props.name}`}></i>);\n\nIcon.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n\nexport default Icon;\n","import React from 'react';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport { settings } from '../../../data/dataStore';\n\nimport Icon from '../../common/Icon/Icon';\n\nimport styles from './Header.module.scss';\n\nconst Header = () => (\n  <header className={styles.component}>\n    <Grid>\n      <Row>\n        <Col xs>\n          <div className={styles.logo}>\n            <Icon name={settings.logoIcon} />\n            <span className={styles.name}>{settings.header.name}</span>\n          </div>\n        </Col>\n      </Row>\n    </Grid>\n  </header>\n);\n\nexport default Header;\n","export const convertTabType = (tabType) => {\n  switch (tabType) {\n    case 'TEXT_GUITAR_TAB':\n      return 'guitar';\n    case 'CHORDS':\n      return 'chords';\n    case 'TEXT_BASS_TAB':\n      return 'bass';\n    default:\n      return 'player';\n  }\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Title.module.scss';\n\nconst Title = ({ title, subtitle }) => (\n  <Fragment>\n    {title && <h1 className={styles.title}>{title}</h1>}\n    {subtitle && <h3 className={styles.subtitle}>{subtitle}</h3>}\n  </Fragment>\n\n);\n\nTitle.propTypes = {\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n};\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Button.module.scss';\n\nconst Button = ({ variant = '', ...otherProps }) => (\n  <button\n    {...otherProps}\n    className={styles.component + variant.split(' ').map(name => ' ' + (styles[name] || name)).join('')}\n  />\n);\n\nButton.propTypes = {\n  variant: PropTypes.node,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { settings } from '../../../data/dataStore';\n\nimport Icon from '../Icon/Icon';\n\nimport styles from './Checkbox.module.scss';\n\nconst Checkboxes = ({ label, checked, setChecked }) => {\n\n  return (\n    <label className={styles.component}>\n      <input\n        type='checkbox'\n        checked={checked[label]}\n        onChange={() => setChecked({ ...checked, [label]: !checked[label] })}\n      />\n      <span>\n        {<Icon name={settings.logoIcon} />}\n        <span>{label}</span>\n      </span>\n    </label>\n  );\n};\n\nCheckboxes.propTypes = {\n  label: PropTypes.string.isRequired,\n  checked: PropTypes.object.isRequired,\n  setChecked: PropTypes.func.isRequired,\n};\n\nexport default Checkboxes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { settings } from '../../../data/dataStore';\n\nimport Button from '../../common/Button/Button';\nimport Icon from '../../common/Icon/Icon';\nimport Checkbox from '../../common/Checkbox/Checkbox';\n\nimport styles from './Search.module.scss';\n\nconst Search = ({ makeVisible, visibleButtons, setValue, value, fetchData, checked, setChecked }) => {\n  const data = { ...settings.contentContainer.search };\n\n  return (\n    <div className={styles.component}>\n      <input\n        type='text'\n        placeholder={data.placeholder}\n        value={value}\n        onChange={event => {\n          setValue(event.target.value);\n          event.target.value.length ? makeVisible(true) : makeVisible(false);\n        }}\n      />\n      <div className={styles.checkboxes}>\n        {data.checkboxes.map(item => (\n          <Checkbox key={item} label={item} checked={checked} setChecked={setChecked} />\n        ))}\n      </div>\n      <div className={styles.buttons + (visibleButtons ? ` ${styles.buttonsShown}` : '')}>\n        <Button onClick={() => fetchData(value)}>\n          <Icon name={data.buttons.search.ico} />\n          <span>{data.buttons.search.txt}</span>\n        </Button>\n        <Button\n          variant={data.buttons.cancel.variant}\n          onClick={() => {\n            setValue('');\n            makeVisible(false);\n          }}\n        >\n          <Icon name={data.buttons.cancel.ico} />\n          <span>{data.buttons.cancel.txt}</span>\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  makeVisible: PropTypes.func,\n  visibleButtons: PropTypes.bool,\n  setValue: PropTypes.func,\n  value: PropTypes.string,\n  fetchData: PropTypes.func,\n  checked: PropTypes.object,\n  setChecked: PropTypes.func,\n};\n\n\nexport default Search;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { settings } from '../../../data/dataStore';\nimport { convertTabType } from '../../../utils/convertTabType';\n\nimport Icon from '../Icon/Icon';\n\nimport styles from './TabType.module.scss';\n\nconst TabType = ({ tabType }) => {\n  return (\n    <span className={styles.component}><Icon name={settings.logoIcon} />{convertTabType(tabType)}</span>\n  );\n};\n\nTabType.propTypes = {\n  tabType: PropTypes.string.isRequired,\n};\n\nexport default TabType;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col } from 'react-flexbox-grid';\nimport { settings } from '../../../data/dataStore';\n\nimport TabType from '../../common/TabType/TabType';\n\nimport styles from './ListItem.module.scss';\n\nconst ListItem = ({ id, title, artist: { name }, tabTypes }) => {\n  return (\n\n    <Col {...settings.col}>\n      <div className={styles.component}>\n        <a href={`${settings.list.href}${id}`}\n          target='blank'\n          className={styles.link}\n        >\n          <Row>\n            <Col xs>\n              <h4 className={styles.title}>{title}</h4>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs>\n              <span className={styles.author}>By: <strong>{name}</strong></span>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs>\n              <div className={styles.tabTypes}>\n                {tabTypes.map(item => (\n                  <TabType key={item} tabType={item} />\n                ))}\n              </div>\n            </Col>\n          </Row>\n        </a>\n      </div>\n    </Col>\n  );\n};\n\nListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  artist: PropTypes.object.isRequired,\n  name: PropTypes.string,\n  tabTypes: PropTypes.array.isRequired,\n};\n\nexport default ListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Pagination.module.scss';\n\nconst Pagination = ({ pagesCount, activePage, setActivePage }) => {\n  const pagination = [];\n\n  for (let i = 0; i < pagesCount; i++) {\n    pagination.push(\n      <li className={styles.list} key={i}>\n        <span\n          onClick={() => setActivePage(i)}\n          className={i === activePage ? styles.active : null}\n        >\n          {`page ${i}`}\n        </span>\n      </li>\n    );\n  }\n\n\n  return <ul className={styles.list}>{pagination}</ul>;\n};\n\nPagination.propTypes = {\n  pagesCount: PropTypes.number.isRequired,\n  activePage: PropTypes.number.isRequired,\n  setActivePage: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col } from 'react-flexbox-grid';\nimport { settings } from '../../../data/dataStore';\n\nimport Title from '../../common/Title/Title';\nimport ListItem from '../ListItem/ListItem';\nimport Pagination from '../../common/Pagination/Pagination';\n\n\nconst List = ({ filteredList }) => {\n  const data = settings.list;\n\n  const [activePage, setActivePage] = useState(0);\n  const pageItems = data.pageItems;\n  const pagesCount = Math.ceil(filteredList.length / pageItems);\n\n  return (\n    <Fragment>\n      <Row>\n        <Col {...settings.col}>\n          <Title subtitle={`${data.title} ${filteredList.length}`} />\n        </Col>\n      </Row>\n      <Row center=\"xs\">\n        <Col xs>\n          <Pagination\n            pagesCount={pagesCount}\n            activePage={activePage}\n            setActivePage={setActivePage} />\n        </Col>\n      </Row>\n      <Row>\n        {filteredList\n          .slice(activePage * pageItems, (activePage + 1) * pageItems)\n          .map(item => (\n            <ListItem key={item.id} {...item} />\n          ))}\n      </Row>\n    </Fragment>\n  );\n};\n\nList.propTypes = {\n  filteredList: PropTypes.array,\n};\n\nexport default List;\n","import React, { useState } from 'react';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport { settings } from '../../../data/dataStore';\nimport { convertTabType } from '../../../utils/convertTabType';\n\nimport Title from '../../common/Title/Title';\nimport Search from '../../features/Search/Search';\n\nimport styles from './ContentContainer.module.scss';\nimport List from '../../features/List/List';\n\nconst ContentContainer = () => {\n  const data = { ...settings.contentContainer };\n\n  const [value, setValue] = useState('');\n  const [visibleButtons, makeVisible] = useState(false);\n  const [apiData, setApiData] = useState([]);\n  const [checked, setChecked] = useState({\n    player: true,\n    guitar: true,\n    chords: true,\n    bass: true,\n  });\n\n  const fetchData = (value) => {\n    fetch(`${data.fetchReq}${value}`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setApiData(result);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  };\n\n  const filteredList = apiData.filter(item => {\n    const shouldBeVisible = item.tabTypes.every(type => {\n      return checked[convertTabType(type)];\n    });\n    return shouldBeVisible;\n  });\n\n  return (\n    <section className={styles.component}>\n      <Grid>\n        <Row middle=\"md\">\n          <Col {...settings.col}>\n            <Title {...data.pageTitle} />\n          </Col>\n        </Row>\n        <Row middle=\"md\">\n          <Col {...settings.col}>\n            <Search\n              value={value}\n              setValue={setValue}\n              visibleButtons={visibleButtons}\n              makeVisible={makeVisible}\n              fetchData={fetchData}\n              checked={checked}\n              setChecked={setChecked}\n            />\n          </Col>\n        </Row>\n        {apiData.length > 0 &&\n          <List filteredList={filteredList} />\n        }\n      </Grid>\n    </section>\n  );\n};\n\nexport default ContentContainer;\n","import React, { Component, Fragment } from 'react';\n\nimport Header from './components/layout/Header/Header';\nimport ContentContainer from './components/layout/ContentContainer/ContentContainer';\n\nexport default class App extends Component {\n\n  render() {\n    return (\n      <Fragment>\n        <Header />\n        <main>\n          <ContentContainer />\n        </main>\n      </Fragment>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/global.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}